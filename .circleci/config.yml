version: 2
jobs:
  test:
    working_directory: ~/sinatra-sandbox
    docker:
      - image: circleci/python:2.7.15-jessie
        environment:
          RACK_ENV: production
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export CI_BUILD_ID="${CIRCLE_BRANCH}-build-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:1:7}"' >> $BASH_ENV
      - run:
          name: Build image and start app
          command: docker-compose --file docker-compose-build.yml up -d
      - run:
          name: Unit tests
          command: docker-compose --file docker-compose-build.yml exec app rspec spec/unit
      - run:
          name: Request tests
          command: docker-compose --file docker-compose-build.yml exec app rspec spec/request
      - run:
          name: Lint with StandardRB
          command: docker-compose --file docker-compose-build.yml exec app bundle exec standard

  build:
    working_directory: ~/sinatra-sandbox
    docker:
      - image: circleci/python:2.7.15-jessie
        environment:
          RACK_ENV: production
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export CI_BUILD_ID="${CIRCLE_BRANCH}-build-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:1:7}"' >> $BASH_ENV
      - run:
          name: Build image
          command: docker-compose --file docker-compose-build.yml build
      - run:
          name: Log in to Dockerhub
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Push image to Dockerhub
          command: docker push tinisi/agent-0028-sinatra-sandbox:${CI_BUILD_ID}

  deploy:
    working_directory: ~/sinatra-sandbox
    docker:
      - image: circleci/python:2.7.15-jessie
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            # NOTE: using CIRCLE_PREVIOUS_BUILD_NUM here, need a better way...
            echo 'export CI_BUILD_ID="${CIRCLE_BRANCH}-build-${CIRCLE_PREVIOUS_BUILD_NUM}-${CIRCLE_SHA1:1:7}"' >> $BASH_ENV
      - run: git clone git@github.com:tinisi/grosgrain.git /home/circleci/grosgrain
      - run: cd ~/grosgrain/fabric && pipenv install --ignore-pipfile
      - run: cd ~/grosgrain/fabric && pipenv run fab docker_compose_deploy:"${CI_BUILD_ID}","/home/circleci/sinatra-sandbox/docker-compose-deploy.yml","sinatra-sandbox" --hosts=nexus.tinisi.com --user=tinisi

workflows:
  version: 2
  test-build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop
